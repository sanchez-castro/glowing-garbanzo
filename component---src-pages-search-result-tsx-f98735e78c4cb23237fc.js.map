{"version":3,"sources":["webpack:///./src/shared/component/post-list.tsx","webpack:///./src/shared/component/extended-searchbar.tsx","webpack:///./src/shared/component/post-list.module.scss","webpack:///./src/pages/search-result.tsx","webpack:///./src/shared/component/extended-searchbar.module.scss"],"names":["PostList","props","postList","_","cloneDeep","list","state","visiblePosts","fullList","componentDidMount","this","loadMore","listLength","length","setState","allMarkdownRemark","edges","slice","render","map","index","node","frontmatter","title","date","description","type","tags","featuredImage","slug","fields","key","excerpt","childImageSharp","fluid","src","link","extended","className","styles","loadPosts","onClick","Component","Tag","active","activeTag","tag","join","deleteTag","addTag","ExtendedSearchbar","useState","selectedTags","group","fieldValue","includes","lg","xl","extendedInputContainer","extendedSearchbar","placeholder","onKeyUp","tagContainer","filter","push","onTagSelected","moreTags","module","exports","ResultPage","tagSelectHandler","filterByTags","search","filteredData","PostsData","data","query","location","searchTerm","toLowerCase","searchInputHandler","event","target","value","trim","dummyData","posts","Fuse","keys","result","item","post","intersection","searchText","bind","style","marginTop","resultPageQuery"],"mappings":"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","file":"component---src-pages-search-result-tsx-f98735e78c4cb23237fc.js","sourcesContent":["import React, { Fragment, Component } from 'react'\nimport { PostsData } from '../models/post';\nimport PostPreview from './post-preview';\nimport Subscribe from './subscribe';\nimport styles from './post-list.module.scss'\nimport _ from 'lodash'\nimport { Edge } from '../models/post';\n\n\ninterface PostListProps {\n    list: PostsData;\n}  \n\ninterface PostListState {\n  visiblePosts: Edge[],\n  fullList: boolean\n}\n\nclass PostList extends Component<PostListProps, PostListState> {\n    private postList: PostsData\n    constructor(props: PostListProps) {\n      super(props)\n      this.postList = _.cloneDeep(props.list)\n      this.state = {\n        visiblePosts: [],\n        fullList: false\n      }\n    }\n\n    componentDidMount() {\n      this.loadMore()\n    }\n\n    loadMore() {\n      const listLength = this.state.visiblePosts.length\n      this.setState(\n        {\n          visiblePosts: this.postList.allMarkdownRemark.edges.slice(0, listLength + 6),\n          fullList: listLength == this.postList.allMarkdownRemark.edges.length\n        }\n      )\n    }\n\n    render() {\n      return (\n        <Fragment>\n          {this.state.visiblePosts.map(({ node }: any, index: number) => {\n            const {\n              title,\n              date,\n              description,\n              type,\n              tags,\n              featuredImage\n            } = node.frontmatter;\n            const slug = node.fields.slug\n            return (\n              <Fragment>\n                <PostPreview\n                  key={slug}\n                  title={title}\n                  date={date}\n                  excerpt={description || node.excerpt}\n                  type={type}\n                  tags={tags}\n                  featuredImage={\n                    featuredImage ? featuredImage.childImageSharp.fluid.src : null\n                  }\n                  link={slug}\n                  extended={index == 0 ? true : false}\n                ></PostPreview>\n                {index == 4 ? <Subscribe></Subscribe> : \"\"}\n              </Fragment>\n            );\n          })}\n    \n          { this.state.fullList ? '' : <div className={styles.loadPosts} onClick={() => this.loadMore()}>Load More</div>}\n        </Fragment>\n      );\n    }\n  };\n\n  export default PostList","import React, { useState, Fragment } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport styles from \"./extended-searchbar.module.scss\";\nimport searchIcon from \"../../assets/icon/search.svg\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\ninterface SearchbarState {\n  selectedTags: Array<string>\n}\n\nconst ExtendedSearchbar = (props: any) => {\n  const [state, setState] = useState<SearchbarState>({\n    selectedTags: props.selectedTags ? props.selectedTags : []\n  });\n\n  const data = useStaticQuery(\n    graphql`\n      query Tags {\n        allMarkdownRemark(limit: 2000) {\n          group(field: frontmatter___tags) {\n            fieldValue\n          }\n        }\n      }\n    `\n  );\n\n  const tags: Array<Tag> = data.allMarkdownRemark.group.map((tag: any) => {\n    return { \n      title: tag.fieldValue, \n      active: state.selectedTags.includes(tag.fieldValue) \n    };\n  });\n\n  const addTag = (title: string) => {\n    let selectedTags = state.selectedTags;\n    if (selectedTags.includes(title)) {\n      selectedTags = selectedTags.filter((tag: string) => tag !== title);\n    } else {\n      selectedTags.push(title);\n    }\n    setState({ selectedTags: selectedTags });\n    if (props.onTagSelected) {\n      props.onTagSelected(selectedTags);\n    }\n  };\n\n  return (\n    <div>\n      <Row className=\"justify-content-md-center\">\n        <Col className=\"d-flex justify-content-center\" lg={10} xl={10}>\n          <div className={styles.extendedInputContainer}>\n            <input\n              className={styles.extendedSearchbar}\n              type=\"text\"\n              placeholder=\"What do you want to learn today?\"\n              onKeyUp={props.onKeyUp}\n            />\n          </div>\n        </Col>\n      </Row>        \n      <Row className=\"justify-content-md-center\">\n        <small>Filter by tag</small>\n      </Row>\n      <Row className=\"justify-content-md-center\">\n        <Col className=\"d-flex justify-content-center\" lg={7} xl={7}>\n          <div className={styles.tags}>\n            {tags.map((tag: Tag) => (\n              <div\n                className={styles.tagContainer}\n                onClick={() => addTag(tag.title)}\n                key={tag.title}\n              >\n                <Tag title={tag.title} active={tag.active}></Tag>\n              </div>\n            ))}\n          </div>\n        </Col>\n      </Row>\n      <Row className={[\"justify-content-md-center\", styles.moreTags].join(\" \")}>\n        <small>See all tags</small>\n      </Row>\n    </div>\n  );\n};\n\ninterface Tag {\n  title: string\n  active: boolean\n}\n\nconst Tag = (props: Tag) => {\n  return (\n    <button\n      className={[props.active ? styles.activeTag : \"\", styles.tag].join(\" \")}\n    >\n      {props.title}\n      {props.active ? (\n        <label className={styles.deleteTag}>\n          <small>&#10005;</small>\n        </label>\n      ) : (\n        <label className={styles.addTag}>\n          <small>&#10005;</small>\n        </label>\n      )}\n    </button>\n  );\n};\n\nexport default ExtendedSearchbar;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadPosts\":\"post-list-module--load-posts--17m4n\"};","import React, { useState, Component, Fragment, KeyboardEvent } from 'react'\nimport Layout from \"../shared/component/layout\";\nimport { Container, Row, Col } from 'react-bootstrap'\nimport ExtendedSearchbar from '../shared/component/extended-searchbar';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { postsFragment } from '../shared/fragments/posts';\nimport { PostsData } from \"../shared/models/post\";\nimport { IPostsData } from '../shared/interfaces/post';\nimport _ from 'lodash'\nimport PostList from '../shared/component/post-list';\nimport Fuse from 'fuse.js'\n\ninterface ResultProps {\n    location: any,\n    data: PostsData\n}\n\ninterface ResultState {\n    query: string\n    filteredData: PostsData\n    selectedTags: string[]\n}\n\nclass ResultPage extends Component<ResultProps, ResultState> {\n\n    constructor(props: ResultProps) {\n        super(props)\n        this.state = {\n            filteredData: new PostsData(_.cloneDeep(props.data)),\n            query: props.location.state ? props.location.state.searchTerm.toLowerCase() : \"\",\n            selectedTags: props.location.state ? props.location.state.tags : []\n        }\n    }\n\n    componentDidMount() {\n        this.search()\n    }\n\n    searchInputHandler(event: React.KeyboardEvent<HTMLInputElement>) {\n        const query = event.target as HTMLInputElement\n        this.setState({\n            query: query.value\n        }, () => this.search())\n    } \n\n    search() {\n        if(!this.state.query.trim() && this.state.selectedTags.length == 0 ) {\n            this.setState({\n                filteredData: _.cloneDeep(this.props.data)\n            })\n            return;\n        }\n        const dummyData = _.cloneDeep(this.props.data);\n        let posts = dummyData.allMarkdownRemark.edges || [];\n        const options = {\n            keys: ['node.excerpt', 'node.frontmatter.title', 'node.frontmatter.tags', 'node.frontmatter.type']\n        }\n        const fuse = new Fuse(posts, options)\n        const result = fuse.search(this.state.query)\n        posts = result.map( result => result.item)\n        dummyData.allMarkdownRemark.edges = posts\n        this.setState({\n            filteredData: dummyData\n        }, () => this.state.selectedTags.length > 0 ? this.filterByTags() : '')\n    }\n\n    filterByTags() {\n        var dummyData: PostsData\n        if(!this.state.query.trim()){\n           dummyData = _.cloneDeep(this.props.data)\n        }else {\n           dummyData = {...this.state.filteredData}\n        }\n        const posts = dummyData.allMarkdownRemark.edges || [];\n        const filteredData = posts.filter((post: any) => {\n            let { tags } = post.node.frontmatter;\n            return (\n                (_.intersection(tags, this.state.selectedTags).length > 0)\n            );\n        });\n        dummyData.allMarkdownRemark.edges = filteredData\n        this.setState({\n            filteredData: dummyData\n        })\n    }\n\n    tagSelectHandler = (tags: Array<string>) => {\n        if(tags.length > 0){\n            this.setState({\n                selectedTags: tags\n            }, () => this.filterByTags())\n        }else {\n            this.setState({\n                selectedTags: tags\n            }, () => this.search())\n        }\n    }  \n\n    render() {\n        const searchText = `${this.state.filteredData.allMarkdownRemark.edges.length} posts found for ${ !this.state.query.trim() ? \"your search\" : '\"' + this.state.query + '\"' }`\n        return (\n            <Layout>\n                <Container fluid>\n                    <ExtendedSearchbar \n                        selectedTags={this.state.selectedTags}\n                        onTagSelected={this.tagSelectHandler}\n                        onKeyUp={this.searchInputHandler.bind(this)}\n                        value={this.state.query}\n                    ></ExtendedSearchbar>\n                    <Row className=\"justify-content-md-center\">\n                        <Col lg={10}>\n                            <h1 style={{ marginTop: \"5vh\" }}>{searchText}</h1>\n                        </Col>\n                        <Col lg={10} xl={10}>\n                            <PostList list={this.state.filteredData}></PostList>\n                        </Col>\n                    </Row>\n                </Container>\n            </Layout>\n        );\n    }\n}\n\nexport default ResultPage\n\nexport const resultPageQuery = graphql`\n  query {\n    ...PostsFragment\n  }\n`;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"extendedInputContainer\":\"extended-searchbar-module--extended-input-container--1R9Ou\",\"extendedSearchbar\":\"extended-searchbar-module--extended-searchbar--cb_S8\",\"tags\":\"extended-searchbar-module--tags--1gRRM\",\"tagContainer\":\"extended-searchbar-module--tag-container--2riFW\",\"tag\":\"extended-searchbar-module--tag--1tj7o\",\"activeTag\":\"extended-searchbar-module--active-tag--16fIM\",\"deleteTag\":\"extended-searchbar-module--delete-tag--2O1x1\",\"addTag\":\"extended-searchbar-module--add-tag--32CbX\",\"moreTags\":\"extended-searchbar-module--more-tags--3blrs\"};"],"sourceRoot":""}