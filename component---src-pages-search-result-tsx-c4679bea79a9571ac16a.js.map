{"version":3,"sources":["webpack:///./src/shared/component/extended-searchbar.tsx","webpack:///./src/pages/search-result.tsx","webpack:///./src/shared/component/extended-searchbar.module.scss"],"names":["Tag","props","className","active","styles","activeTag","tag","join","title","deleteTag","addTag","ExtendedSearchbar","useState","selectedTags","state","setState","tags","allMarkdownRemark","group","map","fieldValue","includes","lg","xl","extendedInputContainer","extendedSearchbar","type","placeholder","onKeyUp","tagContainer","onClick","filter","push","onTagSelected","key","moreTags","ResultPage","tagSelectHandler","length","filterByTags","search","filteredData","PostsData","_","cloneDeep","data","query","location","searchTerm","toLowerCase","componentDidMount","this","searchInputHandler","event","target","value","trim","dummyData","posts","edges","Fuse","keys","result","item","post","node","frontmatter","intersection","render","searchText","fluid","bind","style","margin","list","Component","resultPageQuery","module","exports"],"mappings":"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","file":"component---src-pages-search-result-tsx-c4679bea79a9571ac16a.js","sourcesContent":["import React, { useState, Fragment } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport styles from \"./extended-searchbar.module.scss\";\nimport searchIcon from \"../../assets/icon/search.svg\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\ninterface SearchbarState {\n  selectedTags: Array<string>\n}\n\nconst ExtendedSearchbar = (props: any) => {\n  const [state, setState] = useState<SearchbarState>({\n    selectedTags: props.selectedTags ? props.selectedTags : []\n  });\n\n  const data = useStaticQuery(\n    graphql`\n      query Tags {\n        allMarkdownRemark(limit: 2000) {\n          group(field: frontmatter___tags) {\n            fieldValue\n          }\n        }\n      }\n    `\n  );\n\n  const tags: Array<Tag> = data.allMarkdownRemark.group.map((tag: any) => {\n    return { \n      title: tag.fieldValue, \n      active: state.selectedTags.includes(tag.fieldValue) \n    };\n  });\n\n  const addTag = (title: string) => {\n    let selectedTags = state.selectedTags;\n    if (selectedTags.includes(title)) {\n      selectedTags = selectedTags.filter((tag: string) => tag !== title);\n    } else {\n      selectedTags.push(title);\n    }\n    setState({ selectedTags: selectedTags });\n    if (props.onTagSelected) {\n      props.onTagSelected(selectedTags);\n    }\n  };\n\n  return (\n    <div>\n      <Row className=\"justify-content-md-center\">\n        <Col className=\"d-flex justify-content-center\" lg={10} xl={10}>\n          <div className={styles.extendedInputContainer}>\n            <input\n              className={styles.extendedSearchbar}\n              type=\"text\"\n              placeholder=\"What do you want to learn today?\"\n              onKeyUp={props.onKeyUp}\n            />\n          </div>\n        </Col>\n      </Row>        \n      <Row className=\"justify-content-md-center\">\n        <small>Filter by tag</small>\n      </Row>\n      <Row className=\"justify-content-md-center\">\n        <Col className=\"d-flex justify-content-center\" lg={7} xl={7}>\n          <div className={styles.tags}>\n            {tags.map((tag: Tag) => (\n              <div\n                className={styles.tagContainer}\n                onClick={() => addTag(tag.title)}\n                key={tag.title}\n              >\n                <Tag title={tag.title} active={tag.active}></Tag>\n              </div>\n            ))}\n          </div>\n        </Col>\n      </Row>\n      <Row className={[\"justify-content-md-center\", styles.moreTags].join(\" \")}>\n        <small>See all tags</small>\n      </Row>\n    </div>\n  );\n};\n\ninterface Tag {\n  title: string\n  active: boolean\n}\n\nconst Tag = (props: Tag) => {\n  return (\n    <button\n      className={[props.active ? styles.activeTag : \"\", styles.tag].join(\" \")}\n    >\n      {props.title}\n      {props.active ? (\n        <label className={styles.deleteTag}>\n          <small>&#10005;</small>\n        </label>\n      ) : (\n        <label className={styles.addTag}>\n          <small>&#10005;</small>\n        </label>\n      )}\n    </button>\n  );\n};\n\nexport default ExtendedSearchbar;\n","import React, { useState, Component, Fragment, KeyboardEvent } from 'react'\nimport Layout from \"../shared/component/layout\";\nimport { Container, Row, Col } from 'react-bootstrap'\nimport ExtendedSearchbar from '../shared/component/extended-searchbar';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { postsFragment } from '../shared/fragments/posts';\nimport { PostsData } from \"../shared/models/post\";\nimport { IPostsData } from '../shared/interfaces/post';\nimport _ from 'lodash'\nimport PostList from '../shared/component/post-list';\nimport Fuse from 'fuse.js'\n\ninterface ResultProps {\n    location: any,\n    data: PostsData\n}\n\ninterface ResultState {\n    query: string\n    filteredData: PostsData\n    selectedTags: string[]\n}\n\nclass ResultPage extends Component<ResultProps, ResultState> {\n\n    constructor(props: ResultProps) {\n        super(props)\n        this.state = {\n            filteredData: new PostsData(_.cloneDeep(props.data)),\n            query: props.location.state ? props.location.state.searchTerm.toLowerCase() : \"\",\n            selectedTags: props.location.state ? props.location.state.tags : []\n        }\n    }\n\n    componentDidMount() {\n        this.search()\n    }\n\n    searchInputHandler(event: React.KeyboardEvent<HTMLInputElement>) {\n        const query = event.target as HTMLInputElement\n        this.setState({\n            query: query.value\n        }, () => this.search())\n    } \n\n    search() {\n        if(!this.state.query.trim() && this.state.selectedTags.length == 0 ) {\n            this.setState({\n                filteredData: _.cloneDeep(this.props.data)\n            })\n            return;\n        }\n        const dummyData = _.cloneDeep(this.props.data);\n        let posts = dummyData.allMarkdownRemark.edges || [];\n        const options = {\n            keys: ['node.excerpt', 'node.frontmatter.title', 'node.frontmatter.tags', 'node.frontmatter.type']\n        }\n        const fuse = new Fuse(posts, options)\n        const result = fuse.search(this.state.query)\n        posts = result.map( result => result.item)\n        dummyData.allMarkdownRemark.edges = posts\n        this.setState({\n            filteredData: dummyData\n        }, () => this.state.selectedTags.length > 0 ? this.filterByTags() : '')\n    }\n\n    filterByTags() {\n        var dummyData: PostsData\n        if(!this.state.query.trim()){\n           dummyData = _.cloneDeep(this.props.data)\n        }else {\n           dummyData = {...this.state.filteredData}\n        }\n        const posts = dummyData.allMarkdownRemark.edges || [];\n        const filteredData = posts.filter((post: any) => {\n            let { tags } = post.node.frontmatter;\n            return (\n                (_.intersection(tags, this.state.selectedTags).length > 0)\n            );\n        });\n        dummyData.allMarkdownRemark.edges = filteredData\n        this.setState({\n            filteredData: dummyData\n        })\n    }\n\n    tagSelectHandler = (tags: Array<string>) => {\n        if(tags.length > 0){\n            this.setState({\n                selectedTags: tags\n            }, () => this.filterByTags())\n        }else {\n            this.setState({\n                selectedTags: tags\n            }, () => this.search())\n        }\n    }  \n\n    render() {\n        const searchText = `${this.state.filteredData.allMarkdownRemark.edges.length} posts found for ${ !this.state.query.trim() ? \"your search\" : '\"' + this.state.query + '\"' }`\n        return (\n            <Layout>\n                <Container fluid>\n                    <ExtendedSearchbar \n                        selectedTags={this.state.selectedTags}\n                        onTagSelected={this.tagSelectHandler}\n                        onKeyUp={this.searchInputHandler.bind(this)}\n                        value={this.state.query}\n                    ></ExtendedSearchbar>\n                    <Row className=\"justify-content-md-center\">\n                        <Col lg={10}>\n                            <h1 style={{ margin: \"5vh 0 5vh 0\" }}>{searchText}</h1>\n                        </Col>\n                        <Col lg={10} xl={10}>\n                            <PostList result={true} list={this.state.filteredData}></PostList>\n                        </Col>\n                    </Row>\n                </Container>\n            </Layout>\n        );\n    }\n}\n\nexport default ResultPage\n\nexport const resultPageQuery = graphql`\n  query {\n    ...PostsFragment\n  }\n`;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"extendedInputContainer\":\"extended-searchbar-module--extended-input-container--1R9Ou\",\"extendedSearchbar\":\"extended-searchbar-module--extended-searchbar--cb_S8\",\"tags\":\"extended-searchbar-module--tags--1gRRM\",\"tagContainer\":\"extended-searchbar-module--tag-container--2riFW\",\"tag\":\"extended-searchbar-module--tag--1tj7o\",\"activeTag\":\"extended-searchbar-module--active-tag--16fIM\",\"deleteTag\":\"extended-searchbar-module--delete-tag--2O1x1\",\"addTag\":\"extended-searchbar-module--add-tag--32CbX\",\"moreTags\":\"extended-searchbar-module--more-tags--3blrs\"};"],"sourceRoot":""}