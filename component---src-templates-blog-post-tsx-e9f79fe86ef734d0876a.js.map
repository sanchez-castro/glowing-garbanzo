{"version":3,"sources":["webpack:///./src/shared/component/related-posts.tsx","webpack:///./src/templates/blog-post.tsx","webpack:///./src/templates/blog-post.module.scss"],"names":["RelatedPosts","props","postsQuery","posts","PostsData","fuse","Fuse","allMarkdownRemark","edges","includeScore","keys","tagsResult","search","tags","join","titleResult","title","result","concat","sort","a","b","keyA","score","keyB","reducedArray","_","uniq","map","item","filter","node","id","parentId","slice","className","style","margin","index","frontmatter","date","description","contentType","type","featuredImage","slug","fields","mobile","key","excerpt","childImageSharp","fluid","src","link","extended","Mobile","post","pageContext","previous","next","Row","Col","lg","xl","styles","jumbotronMobile","alt","xs","sm","mobileHeader","metaContainer","postType","types","mobileContent","dangerouslySetInnerHTML","__html","html","linkUl","linkUlMobile","to","rel","Landscape","jumbotron","header","content","pageQuery","BlogPostTemplate","PostData","data","markdownRemark","Container","module","exports"],"mappings":"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","file":"component---src-templates-blog-post-tsx-e9f79fe86ef734d0876a.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport PostPreview from \"./post-preview\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { PostsData } from \"../models/post\";\nimport Fuse from \"fuse.js\";\nimport _ from \"lodash\";\n\ninterface Props {\n  title: string;\n  tags: string[];\n  parentId: string;\n  mobile?: boolean;\n}\n\nconst RelatedPosts = (props: Props) => {\n  const postsQuery = useStaticQuery(\n    graphql`\n      query {\n        ...PostsFragment\n      }\n    `\n  );\n\n  const posts = new PostsData(postsQuery);\n  const options = {\n    includeScore: true,\n    keys: [\"node.excerpt\", \"node.frontmatter.title\", \"node.frontmatter.tags\"],\n  };\n\n  const fuse = new Fuse(posts.allMarkdownRemark.edges, options);\n  const tagsResult = fuse.search(props.tags.join(\" \"));\n  const titleResult = fuse.search(props.title);\n\n  const result = tagsResult.concat(titleResult).sort(function (a, b) {\n    const keyA = a.score || 0,\n      keyB = b.score || 0;\n    if (keyA < keyB) return -1;\n    if (keyA > keyB) return 1;\n    return 0;\n  });\n\n  const reducedArray = _.uniq(\n    result\n      .map((result) => result.item)\n      .filter((item) => item.node.id !== props.parentId)\n  ).slice(0, 3);\n  posts.allMarkdownRemark.edges = reducedArray;\n\n  return (\n    <Fragment>\n      <p\n        className=\"headline-2 d-none d-lg-block\"\n        style={{ margin: \"10vh 0 5vh 0\" }}\n      >\n        Publicaciones relacionadas\n      </p>\n      <p\n        className=\"headline-2 d-block d-lg-none text-center\"\n        style={{ margin: \"5vh 0 5vh 0\" }}\n      >\n        Publicaciones relacionadas\n      </p>\n      {posts.allMarkdownRemark.edges.map(({ node }: any, index: number) => {\n        const {\n          title,\n          date,\n          description,\n          contentType,\n          type,\n          tags,\n          featuredImage,\n        } = node.frontmatter;\n        const slug = node.fields.slug;\n        const mobile = props.mobile ? true : false;\n        return (\n          <Fragment key={index}>\n            <PostPreview\n              key={slug}\n              title={title}\n              date={date}\n              excerpt={description || node.excerpt}\n              contentType={contentType}\n              type={type}\n              tags={tags}\n              featuredImage={\n                featuredImage ? featuredImage.childImageSharp.fluid.src : null\n              }\n              link={slug}\n              extended={false}\n              mobile={mobile}\n            ></PostPreview>\n          </Fragment>\n        );\n      })}\n    </Fragment>\n  );\n};\n\nexport default RelatedPosts;\n","import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../shared/component/layout\";\nimport SEO from \"../components/seo\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport styles from \"./blog-post.module.scss\";\nimport Tags from \"../shared/component/post-tags\";\nimport PostType from \"../shared/component/post-type\";\nimport Subscribe from \"../shared/component/subscribe\";\nimport RelatedPosts from \"../shared/component/related-posts\";\nimport { PostData } from \"../shared/models/post\";\n\ninterface Props {\n  data: PostData;\n  pageContext: any;\n}\n\nconst BlogPostTemplate = (props: Props) => {\n  const postData = new PostData(props.data);\n  const post = postData.markdownRemark;\n  const { previous, next } = props.pageContext;\n\n  return (\n    <Layout>\n      <SEO title={post.frontmatter.title} description={post.excerpt} />\n\n      <Container fluid className=\"d-none d-lg-block\">\n        <Landscape post={post} pageContext={props.pageContext}></Landscape>\n      </Container>\n      <Container fluid className=\"d-block d-lg-none\">\n        <Mobile post={post} pageContext={props.pageContext}></Mobile>\n      </Container>\n    </Layout>\n  );\n};\n\nconst Mobile = (props: any) => {\n  const post = props.post;\n  const { previous, next } = props.pageContext;\n  return (\n    <Row className=\"justify-content-center\">\n      {post.frontmatter.featuredImage ? (\n        <Col lg={12} xl={12} className=\"p-0\">\n          <div className={styles.jumbotronMobile}>\n            <img\n              src={post.frontmatter.featuredImage.childImageSharp.fluid.src}\n              alt=\"post image\"\n            />\n          </div>\n        </Col>\n      ) : (\n        \"\"\n      )}\n      <Col xs={11} sm={11} className={styles.mobileHeader}>\n        <p className=\"headline-1\">{post.frontmatter.title}</p>\n        <p className={[styles.date, \"paragraph\"].join(\" \")}>\n          {post.frontmatter.date}\n        </p>\n        <div className={styles.metaContainer}>\n          {post.frontmatter.contentType ? (\n            <PostType postType={post.frontmatter.type} types={post.frontmatter.contentType}></PostType>\n          ) : (\n            \"\"\n          )}\n          {post.frontmatter.tags ? (\n            <Tags tags={post.frontmatter.tags}></Tags>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </Col>\n      <Col xs={11} sm={11} className={styles.mobileContent}>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      </Col>\n      <Col sm={12} className=\"p-0\">\n        <Subscribe></Subscribe>\n      </Col>\n      <Col xs={12} sm={12} className=\"p-0\">\n        <RelatedPosts\n          mobile={true}\n          parentId={post.id}\n          title={post.frontmatter.title}\n          tags={post.frontmatter.tags}\n        ></RelatedPosts>\n      </Col>\n      <Col xs={10} sm={10}>\n        <ul className={[styles.linkUl, styles.linkUlMobile].join(\" \")}>\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Col>\n    </Row>\n  );\n};\n\nconst Landscape = (props: any) => {\n  const post = props.post;\n  const { previous, next } = props.pageContext;\n  return (\n    <Row className=\"justify-content-center\">\n      {post.frontmatter.featuredImage ? (\n        <Col lg={12} xl={12} className=\"p-0\">\n          <div className={styles.jumbotron}>\n            <img\n              src={post.frontmatter.featuredImage.childImageSharp.fluid.src}\n              alt=\"post image\"\n            />\n          </div>\n        </Col>\n      ) : (\n        \"\"\n      )}\n      <Col lg={10} xl={10} className={styles.header}>\n        <p className=\"headline-1\">{post.frontmatter.title}</p>\n        <p className={[styles.date, \"paragraph\"].join(\" \")}>\n          {post.frontmatter.date}\n        </p>\n        <div className={styles.metaContainer}>\n          {post.frontmatter.contentType ? (\n            <PostType postType={post.frontmatter.type} types={post.frontmatter.contentType}></PostType>\n          ) : (\n            \"\"\n          )}\n          {post.frontmatter.tags ? (\n            <Tags tags={post.frontmatter.tags}></Tags>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </Col>\n      <Col lg={10} xl={10} className={styles.content}>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      </Col>\n      <Col lg={10} xl={10} className=\"p-0\">\n        <Subscribe></Subscribe>\n      </Col>\n      <Col lg={10} xl={10}>\n        <RelatedPosts\n          parentId={post.id}\n          title={post.frontmatter.title}\n          tags={post.frontmatter.tags}\n        ></RelatedPosts>\n      </Col>\n      <Col lg={10} xl={10} className=\"p-0\">\n        <ul className={styles.linkUl}>\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Col>\n    </Row>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        tags\n        contentType\n        type\n        featuredImage {\n          childImageSharp {\n            fluid(maxWidth: 2000) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"jumbotron\":\"blog-post-module--jumbotron--3zt87\",\"jumbotronMobile\":\"blog-post-module--jumbotron-mobile--1PwcU\",\"content\":\"blog-post-module--content--2dQ8S\",\"mobileContent\":\"blog-post-module--mobile-content--30zC0\",\"header\":\"blog-post-module--header--ivRmN\",\"date\":\"blog-post-module--date--_pArM\",\"mobileHeader\":\"blog-post-module--mobileHeader--1A3xg\",\"linkUl\":\"blog-post-module--link-ul--GXd46\",\"linkUlMobile\":\"blog-post-module--link-ul-mobile--2JHfu\"};"],"sourceRoot":""}