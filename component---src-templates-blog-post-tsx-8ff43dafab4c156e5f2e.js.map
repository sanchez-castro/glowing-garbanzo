{"version":3,"sources":["webpack:///./src/shared/component/related-posts.tsx","webpack:///./src/templates/blog-post.tsx","webpack:///./src/templates/blog-post.module.scss"],"names":["RelatedPosts","props","postsQuery","posts","PostsData","fuse","Fuse","allMarkdownRemark","edges","includeScore","keys","tagsResult","search","tags","join","titleResult","title","result","concat","sort","a","b","keyA","score","keyB","reducedArray","_","uniq","map","item","filter","node","id","parentId","slice","style","margin","frontmatter","date","description","type","featuredImage","slug","fields","key","excerpt","childImageSharp","fluid","src","link","extended","pageQuery","BlogPostTemplate","post","PostData","data","markdownRemark","pageContext","previous","next","Container","Row","className","Col","lg","xl","styles","jumbotron","alt","header","metaContainer","types","content","dangerouslySetInnerHTML","__html","html","linkUl","to","rel","module","exports"],"mappings":"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","file":"component---src-templates-blog-post-tsx-8ff43dafab4c156e5f2e.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport PostPreview from \"./post-preview\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { PostsData } from \"../models/post\";\nimport Fuse from \"fuse.js\";\nimport _ from \"lodash\";\n\ninterface Props {\n  title: string;\n  tags: string[];\n  parentId: string\n}\n\nconst RelatedPosts = (props: Props) => {\n  const postsQuery = useStaticQuery(\n    graphql`\n      query {\n        ...PostsFragment\n      }\n    `\n  );\n\n  const posts = new PostsData(postsQuery);\n  const options = {\n    includeScore: true,\n    keys: [\"node.excerpt\", \"node.frontmatter.title\", \"node.frontmatter.tags\"]\n  };\n\n  const fuse = new Fuse(posts.allMarkdownRemark.edges, options);\n  const tagsResult = fuse.search(props.tags.join(\" \"));\n  const titleResult = fuse.search(props.title);\n\n  const result = tagsResult.concat(titleResult).sort(function (a, b) {\n    var keyA = a.score || 0, keyB = b.score || 0;\n    if (keyA < keyB) return -1;\n    if (keyA > keyB) return 1;\n    return 0;\n  });\n\n  const reducedArray = _.uniq(result\n                        .map(result => result.item)\n                        .filter( item => item.node.id !== props.parentId))\n                        .slice(0, 3);\n  posts.allMarkdownRemark.edges = reducedArray;\n\n  return (\n    <Fragment>\n      <h2 style={{ margin: \"10vh 0 5vh 0\" }}>Related articles</h2>\n      {posts.allMarkdownRemark.edges.map(({ node }: any) => {\n        const {\n          title,\n          date,\n          description,\n          type,\n          tags,\n          featuredImage\n        } = node.frontmatter;\n        const slug = node.fields.slug;\n        return (\n          <Fragment>\n            <PostPreview\n              key={slug}\n              title={title}\n              date={date}\n              excerpt={description || node.excerpt}\n              type={type}\n              tags={tags}\n              featuredImage={\n                featuredImage ? featuredImage.childImageSharp.fluid.src : null\n              }\n              link={slug}\n              extended={false}\n            ></PostPreview>\n          </Fragment>\n        );\n      })}\n    </Fragment>\n  );\n};\n\nexport default RelatedPosts;\n","import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../shared/component/layout\";\nimport SEO from \"../components/seo\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport styles from \"./blog-post.module.scss\";\nimport Tags from \"../shared/component/post-tags\";\nimport PostType from \"../shared/component/post-type\";\nimport Subscribe from \"../shared/component/subscribe\";\nimport RelatedPosts from '../shared/component/related-posts'\nimport { PostData } from \"../shared/models/post\";\n\ninterface Props {\n  data: PostData\n  pageContext: any;\n}\n\nconst BlogPostTemplate = (props: Props) => {\n  const post = new PostData(props.data).markdownRemark\n  const { previous, next } = props.pageContext;\n\n  return (\n    <Layout>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.excerpt}\n      />\n\n      <Container fluid>\n        <Row className=\"justify-content-md-center\">\n          {post.frontmatter.featuredImage ? (\n            <Col lg={12} xl={12} className=\"p-0\">\n              <div className={styles.jumbotron}>\n                <img\n                  src={post.frontmatter.featuredImage.childImageSharp.fluid.src}\n                  alt=\"post image\"\n                />\n              </div>\n            </Col>\n          ) : (\n            \"\"\n          )}\n          <Col lg={10} xl={10} className={styles.header}>\n            <h1>{post.frontmatter.title}</h1>\n            <p className={styles.date}>{post.frontmatter.date}</p>\n            <div className={styles.metaContainer}>\n              {post.frontmatter.type ? (\n                <PostType types={post.frontmatter.type}></PostType>\n              ) : (\n                \"\"\n              )}\n              {post.frontmatter.tags ? (\n                <Tags tags={post.frontmatter.tags}></Tags>\n              ) : (\n                \"\"\n              )}\n            </div>\n          </Col>\n          <Col lg={10} xl={10} className={styles.content}>\n            <div dangerouslySetInnerHTML={{ __html: post.html }} />\n          </Col>\n          <Col lg={10} xl={10} className=\"p-0\">\n            <Subscribe></Subscribe>\n          </Col>\n          <Col lg={10} xl={10}>\n            <RelatedPosts parentId={post.id} title={post.frontmatter.title} tags={post.frontmatter.tags}></RelatedPosts>\n          </Col>\n          <Col lg={10} xl={10} className=\"p-0\">\n            <ul className={styles.linkUl}>\n              <li>\n                {previous && (\n                  <Link to={previous.fields.slug} rel=\"prev\">\n                    ← {previous.frontmatter.title}\n                  </Link>\n                )}\n              </li>\n              <li>\n                {next && (\n                  <Link to={next.fields.slug} rel=\"next\">\n                    {next.frontmatter.title} →\n                  </Link>\n                )}\n              </li>\n            </ul>\n          </Col>\n        </Row>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        tags\n        type\n        featuredImage {\n          childImageSharp {\n            fluid(maxWidth: 2000) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"jumbotron\":\"blog-post-module--jumbotron--3zt87\",\"content\":\"blog-post-module--content--2dQ8S\",\"header\":\"blog-post-module--header--ivRmN\",\"date\":\"blog-post-module--date--_pArM\",\"types\":\"blog-post-module--types--2Pxh_\",\"type\":\"blog-post-module--type--7Yq2Y\",\"tags\":\"blog-post-module--tags--2K_EU\",\"tag\":\"blog-post-module--tag--xKgNM\",\"linkUl\":\"blog-post-module--link-ul--GXd46\"};"],"sourceRoot":""}