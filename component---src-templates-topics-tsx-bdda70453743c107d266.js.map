{"version":3,"sources":["webpack:///./src/templates/topics.tsx","webpack:///./src/templates/tags.module.scss"],"names":["Topics","pageContext","data","topic","allMarkdownRemark","edges","totalCount","fluid","className","lg","xl","style","textTransform","map","index","node","fields","slug","frontmatter","title","key","date","excerpt","description","contentType","tags","featuredImage","childImageSharp","src","link","extended","styles","allTags","onClick","navigate","pageQuery","module","exports"],"mappings":"4FAAA,uKAuEeA,UAvDA,SAAC,GAAiC,IAA/BC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,KACrBC,EAAUF,EAAVE,MADuC,EAEjBD,EAAKE,kBAA3BC,EAFuC,EAEvCA,MAAOC,EAFgC,EAEhCA,WASf,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWC,OAAK,GACd,kBAAC,IAAD,CAAKC,UAAU,6BACb,kBAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,IACf,4BACGJ,EADH,QACmC,IAAfA,EAAmB,GAAK,IAD5C,OACqD,IACnD,0BAAMK,MAAO,CAAEC,cAAe,eAAiBT,KAGnD,kBAAC,IAAD,CAAKM,GAAI,GAAIC,GAAI,IACdL,EAAMQ,KAAI,WAAgBC,GAAkB,IAA/BC,EAA+B,EAA/BA,KACKA,EAAKC,OAAdC,KACUF,EAAKG,YAAfC,MACR,OACE,kBAAC,IAAD,CACEC,IAAKL,EAAKC,OACVG,MAAOJ,EAAKG,YAAYC,MACxBE,KAAMN,EAAKG,YAAYG,KACvBC,QAASP,EAAKG,YAAYK,aAAeR,EAAKO,QAC9CE,YAAaT,EAAKG,YAAYM,YAC9BC,KAAMV,EAAKG,YAAYO,KACvBC,cACEX,EAAKG,YAAYQ,cACbX,EAAKG,YAAYQ,cAAcC,gBAAgBpB,MAAMqB,IACrD,KAENC,KAAMd,EAAKC,OAAOC,KAClBa,SAAmB,GAAThB,QAKlB,kBAAC,IAAD,CAAKL,GAAI,GAAIC,GAAI,IACf,yBAAKF,UAAWuB,IAAOC,QAASC,QAAS,WArCjDC,mBAAS,aAqCD,mBAYL,IAAMC,EAAY,c,qBCxEzBC,EAAOC,QAAU,CAAC,QAAU","file":"component---src-templates-topics-tsx-bdda70453743c107d266.js","sourcesContent":["import React from \"react\";\nimport { Link, graphql, navigate } from \"gatsby\";\nimport Layout from \"../shared/component/layout\";\nimport PostPreview from \"../shared/component/post-preview\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport styles from \"./tags.module.scss\";\n\ninterface Props {\n  data: {\n    allMarkdownRemark: any;\n  };\n  pageContext: {\n    topic: string;\n  };\n}\n\nconst Topics = ({ pageContext, data }: Props) => {\n  const { topic } = pageContext;\n  const { edges, totalCount } = data.allMarkdownRemark;\n  const topicHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } for ${topic}`;\n\n  const allTopics = () => {\n    navigate(`/topics`);\n  };\n\n  return (\n    <Layout>\n      <Container fluid>\n        <Row className=\"justify-content-md-center\">\n          <Col lg={12} xl={12}>\n            <h1>\n              {totalCount} post{totalCount === 1 ? \"\" : \"s\"} for{\" \"}\n              <span style={{ textTransform: \"capitalize\" }}>{topic}</span>\n            </h1>\n          </Col>\n          <Col lg={12} xl={12}>\n            {edges.map(({ node }: any, index: number) => {\n              const { slug } = node.fields;\n              const { title } = node.frontmatter;\n              return (\n                <PostPreview\n                  key={node.fields}\n                  title={node.frontmatter.title}\n                  date={node.frontmatter.date}\n                  excerpt={node.frontmatter.description || node.excerpt}\n                  contentType={node.frontmatter.contentType}\n                  tags={node.frontmatter.tags}\n                  featuredImage={\n                    node.frontmatter.featuredImage\n                      ? node.frontmatter.featuredImage.childImageSharp.fluid.src\n                      : null\n                  }\n                  link={node.fields.slug}\n                  extended={index == 0 ? true : false}\n                ></PostPreview>\n              );\n            })}\n          </Col>\n          <Col lg={12} xl={12}>\n            <div className={styles.allTags} onClick={() => allTopics()}>\n              All topics\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default Topics;\n\nexport const pageQuery = graphql`\n  query($topic: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { topics: { in: [$topic] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(pruneLength: 400)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n            topics\n            contentType\n            featuredImage {\n              childImageSharp {\n                fluid(maxWidth: 800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allTags\":\"tags-module--all-tags--umAL4\"};"],"sourceRoot":""}